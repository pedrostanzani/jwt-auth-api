{"/deploy":{"title":"Deploy na AWS","data":{"":"A segunda etapa do projeto consiste em realizar o deploy da API desenvolvida na AWS\n(Amazon Web Services).O deploy foi realizado utilizando Amazon Elastic Kubernetes Service (EKS), eksctl e kubectl,\nalém da criação de distribuição com Amazon CloudFront.","deploy-da-aplicação-eks#Deploy da aplicação EKS":"O Amazon Elastic Kubernetes Service (EKS) é um serviço gerenciado da Amazon Web Services (AWS) que facilita a execução de clusters Kubernetes na nuvem.Foram criados cinco arquivos YAML para a criação dos deployments e services da aplicação. São eles:\nnamespace.yaml\njwt-api-deployment.yaml\njwt-api-service.yaml\npostgres-deployment.yaml\npostgres-service.yaml\nEsses arquivos foram disponibilizados no GitHub.","crie-o-cluster-com-eksctl#Crie o cluster com eksctl":"eksctl create cluster \n  --name jwt-app-cluster \n  --region us-east-1 \n  --nodegroup-name standard-workers \n  --node-type t3.medium \n  --nodes 2 \n  --nodes-min 1 \n  --nodes-max 3 \n  --managed","crie-o-namespace-kubernetes#Crie o namespace Kubernetes":"kubectl apply -f namespace.yaml","faça-o-deploy-do-serviço-postgresql#Faça o deploy do serviço PostgreSQL":"kubectl apply -f postgres-deployment.yaml\nkubectl apply -f postgres-service.yaml","faça-o-deploy-do-servidor-da-api#Faça o deploy do servidor da API":"kubectl apply -f jwt-api-deployment.yaml\nkubectl apply -f jwt-api-service.yaml","all-set#All set!":"Confira se os pods estão rodando corretamente:\nkubectl get pods -n jwt-app","configuração-do-cdn-com-amazon-cloudfront#Configuração do CDN com Amazon CloudFront":"Como forma de disponibilizar a API com acesso HTTPs sem a necessidade de um certificado\nSSL, foi criada uma distribuição usando a Amazon CloudFront — um serviço de Content\nDelivery Network (CDN) da AWS."}},"/endpoints":{"title":"Endpoints da API","data":{"":"A API oferece endpoints de autenticação e de consulta de dados.","swagger#Swagger":"A documentação dos endpoints da API foi desenvolvida com Swagger e Scalar e pode ser acessada nesse link.","lista-de-endpoints#Lista de endpoints":"","registrar-usuário#Registrar usuário":"Endpoint: POST /registrar\nDescrição: endpoint de criação de novos usuários.","fazer-login#Fazer login":"Endpoint: POST /login\nDescrição: endpoint de autenticação para usuários existentes.\nA autenticação é realizada com email e senha. Esse endpoint retorna um token JWT que deve ser usado nas requisições ao endpoint de consulta de dados.","consultar-dados#Consultar dados":"Endpoint: GET /consulta\nDescrição: endpoint de consulta de manchetes.\nEsse endpoint retorna uma lista de manchetes da BBC. Essas manchetes são armazenadas em cache (memória) e atualizam de hora em hora."}},"/getting-started":{"title":"Instalação","data":{"":"Siga as seguintes instruções para instalar e executar o projeto.","instalação-local#Instalação local":"","download#Download":"Faça o download do arquivo compose.yaml neste link e armazene-o em um diretório vazio.","execução-com-docker-compose#Execução com Docker Compose":"Execute o comando abaixo no terminal do diretório em que o arquivo compose.yaml foi armazenado:\ndocker compose up","all-set#All set!":"Agora você pode acessar a API em http://localhost:3000."}},"/":{"title":"Introdução","data":{"":"Esse projeto foi desenvolvido para a disciplina de Computação em Nuvem e demonstra uma API de autenticação com JWTs (JSON Web Tokens) que foi desenvolvida com ElysiaJS, Bun e TypeScript.","tecnologias-utilizadas#Tecnologias utilizadas":"Foram utilizadas as seguintes tecnologias:\nElysiaJS: framework para construir servidores web\nBun: runtime de JavaScript e package manager\nTypeScript: linguagem de programação com tipagem estática\nPrisma: ORM para Node.js e TypeScript\nE as seguintes bibliotecas foram utilizadas para desenvolver o serviço de web scraping:\nCheerio: biblioteca para parsing de HTML\nAxios: cliente HTTP para fazer requisições web","endpoints-da-api#Endpoints da API":"A API oferece endpoints de autenticação e de consulta de dados. Acesse a documentação da API para visualizar a lista de endpoints."}}}